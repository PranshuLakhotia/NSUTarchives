.container {
    display: flex;
    height: 100vh; /* Full height of the viewport */
}

.left-panel {
    flex: 1; /* Takes 1 part of the available space */
    padding: 20px; /* Add padding for aesthetics */
    background-color: #000000; /* Light background for contrast */
    overflow-y: auto; /* Scroll if content overflows */
}

.right-panel {
    flex: 1; /* Takes 1 part of the available space */
    display: flex;
    justify-content: center; /* Center the image horizontally */
    align-items: center; /* Center the image vertically */
    background-color: #e0e0e0; /* Background color for right panel */
}


.card1 {
    display: block;
    position: relative;
    max-width: 75%; /* Allow cards to take full width */
    background-color: #f2f8f9;
    border-radius: 4px;
    padding: 32px 24px;
    margin: 12px;
    text-decoration: none;
    z-index: 0;
    overflow: hidden;
    transition: transform 0.25s ease-out;
}

.card1:hover {
    transform: scale(1.05);
}

.card1:before {
    content: "";
    position: absolute;
    z-index: -1;
    top: -16px;
    right: -16px;
    background: #00838d;
    height: 50px;
    width: 32px;
    border-radius: 32px;
    transform: scale(1);
    transform-origin: 100% 50%;
    transition: transform 0.25s ease-out;
}

.card1:hover:before {
    transform: scale(21);
}

.card1 p {
    font-size: 17px;
    font-weight: 400;
    line-height: 20px;
    color: #666;
}

.card1 p.small {
    font-size: 14px;
}

.go-corner {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    width: 45px;
    height: 38px;
    overflow: hidden;
    top: 0;
    right: 0;
    background-color: #00838d;
    border-radius: 0 4px 0 32px;
}

.go-arrow {
    color: white;
    font-family: courier, sans-serif;
    font-size: 1.5em;
}

.card1:hover p {
    transition: all 0.3s ease-out;
    color: rgba(255, 255, 255, 0.8);
}

.card1:hover h3 {
    transition: all 0.3s ease-out;
    color: #fff;
}

.filters {
    display: flex; /* Arrange filters horizontally */
    align-items: center; /* Center align items vertically */
    justify-content: flex-start; /* Align to the start */
    flex-wrap: wrap; /* Allow wrapping of filters */
    margin-bottom: 20px; /* Space below the filters */
}

.filters input,
.filters select {
    border: none;
    outline: none;
    border-radius: 15px;
    padding: 1em;
    margin: 5px;
    background-color: #ccc;
    box-shadow: inset 2px 5px 10px rgba(0, 0, 0, 0.3);
    transition: 300ms ease-in-out;
}

.filters input:focus,
.filters select:focus {
    background-color: white;
    transform: scale(1.05);
    box-shadow: 13px 13px 100px #969696, -13px -13px 100px #ffffff;
}

.select {
    width: fit-content;
    cursor: pointer;
    position: relative;
    transition: 300ms;
    color: white;
    overflow: hidden;
}

.selected {
    background-color: #2a2f3b;
    padding: 5px;
    margin-bottom: 3px;
    border-radius: 5px;
    position: relative;
    z-index: 100000;
    font-size: 15px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.arrow {
    position: relative;
    right: 0px;
    height: 10px;
    transform: rotate(-90deg);
    width: 25px;
    fill: white;
    z-index: 100000;
    transition: 300ms;
}

.options {
    display: flex;
    flex-direction: column;
    border-radius: 5px;
    padding: 5px;
    background-color: #2a2f3b;
    position: relative;
    top: -100px;
    opacity: 0;
    transition: 300ms;
}

.select:hover > .options {
    opacity: 1;
    top: 0;
}

.select:hover > .selected .arrow {
    transform: rotate(0deg);
}

.option {
    border-radius: 5px;
    padding: 5px;
    transition: 300ms;
    background-color: #2a2f3b;
    width: 150px;
    font-size: 15px;
}

.option:hover {
    background-color: #323741;
}

.options input[type="radio"] {
    display: none;
}

.options label {
    display: inline-block;
}

.options label::before {
    content: attr(data-txt);
}

.options input[type="radio"]:checked + label {
    display: none;
}

.options input[type="radio"]#all:checked + label {
    display: none;
}

.select:has(.options input[type="radio"]#all:checked) .selected::before {
    content: attr(data-default);
}

.select:has(.options input[type="radio"]#option-1:checked) .selected::before {
    content: attr(data-one);
}

.select:has(.options input[type="radio"]#option-2:checked) .selected::before {
    content: attr(data-two);
}

.select:has(.options input[type="radio"]#option-3:checked) .selected::before {
    content: attr(data-three);
}
